# Default values for nmr-predict.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  name: nmrkit
  repository: nfdi4chem/nmrkit:dev-latest
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

EnvConfigMapRef:
  name: "nmrkit-config-map"
  enabled: true
EnvSecretRef:
  name: "nmrkit-secrets"
  enabled: true

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

#DB Properties
rdkitcatridgepostgres:
  enabled: true
  auth:
    pgPassword: secret
    db: nmrkit
    user: test
    postgresPassword: secret
  connection: pgsql
  port: 5432

redis:
  enabled: false
  #architecture: standalone
  auth:
    enabled: true
    password: secret
  global:
    storageClass: standard
  #host: nmrxiv-redis-master
  port: 6379
  replica:
    replicaCount: 1
  master:
    persistence:
      enabled: true
      size: 1Gi
    service:
      type: LoadBalancer
  replica:
    persistence:
      enabled: true
      size: 1Gi

grafana:
  enabled: false
  admin:
    user: admin
    password: secret
  grafana:
    persistence:
      enabled: true
      storageClass: standard
      size: 5Gi
  service:
    type: LoadBalancer

prometheus:
  enabled: false
  alertmanager.enabled: true
  kube-state-metrics.enabled: false
  prometheus-node-exporter.enabled: false
  prometheus-pushgateway.enabled: false
  server:
    service:
      type: LoadBalancer
    global:
    ## How frequently to scrape targets by default
    scrape_interval: 15s
    ## How long until a scrape request times out
    scrape_timeout: 10s
    ## How frequently to evaluate rules
    evaluation_interval: 15s
  # adds additional scrape configs to prometheus.yml
  # must be a string so you have to add a | after extraScrapeConfigs:
  # update the job name and targets according to your configuration
  extraScrapeConfigs: |
    - job_name: 'nmr-kit'
      scrape_interval: 10s
      metrics_path: /metrics
      static_configs:
        - targets: ['nmrkit-nmrkit:80']

minio:
  enabled: false
  auth:
    rootUser: minio
    rootPassword: password
  persistence:
    enabled: true 
    storageClass: standard
    size: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}
