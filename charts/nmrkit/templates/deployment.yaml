apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nmrkit.fullname" . }}
  labels:
    {{- include "nmrkit.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nmrkit.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nmrkit.selectorLabels" . | nindent 8 }}
    spec:
      shareProcessNamespace: true
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nmrkit.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.image.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Values.EnvConfigMapRef.name }}
            - secretRef:
                name: {{ .Values.EnvSecretRef.name }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /latest/registration/health  # Path to the health check endpoint
              port: 80     # Port where your application is listening
            initialDelaySeconds: 40  # Delay before starting the probe
            periodSeconds: 60        # How often to perform the probe
            failureThreshold: 10
          volumeMounts:
          # - name: app-volume
          #   mountPath: /code/app
          - name: docker-socket-volume
            mountPath: "/var/run/docker.sock"
          - name: shared-data-volume
            mountPath: /shared
        - name: {{ .Values.nmrCli.name }}
          image: "{{ .Values.nmrCli.repository }}:{{ .Values.nmrCli.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.nmrCli.pullPolicy }}
          command: ["/bin/sh"]
          stdin: true
          tty: true
        - name: {{ .Values.nmrRespredict.name }}
          image: "{{ .Values.nmrRespredict.repository }}:{{ .Values.nmrRespredict.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.nmrRespredict.pullPolicy }}
          command: ["/bin/sh"]
          stdin: true
          tty: true
          volumeMounts:
            - name: shared-data-volume
              mountPath: /shared
      volumes:
      # - name: app-volume
      #   hostPath:
      #     path: ./app
      - name: docker-socket-volume
        hostPath:
          path: /var/run/docker.sock
      - name: shared-data-volume
        persistentVolumeClaim:
          claimName: shared-data-claim
